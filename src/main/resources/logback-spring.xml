<?xml version="1.0" encoding="UTF-8"?>


<configuration scan="true" debug="false">


    <!-- ERROR级别日志 -->


    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 RollingFileAppender-->


    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">


        <!-- 过滤器，只记录WARN级别的日志 -->


        <filter class="ch.qos.logback.classic.filter.LevelFilter">


            <level>ERROR</level>


            <onMatch>ACCEPT</onMatch>


            <onMismatch>DENY</onMismatch>


        </filter>


        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->


        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">


            <!--日志输出位置 可相对、和绝对路径 -->


            <fileNamePattern>D://logback/${log_dir}/%d{yyyy-MM-dd}/error-log.log</fileNamePattern>


            <!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6，


            则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件是，那些为了归档而创建的目录也会被删除-->


            <maxHistory>${maxHistory}</maxHistory>


        </rollingPolicy>

         

        <!-- 按照固定窗口模式生成日志文件，当文件大于20MB时，生成新的日志文件。窗口大小是1到3，当保存了3个归档文件后，将覆盖最早的日志。


        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">


        <fileNamePattern>${log_dir}/%d{yyyy-MM-dd}/.log.zip</fileNamePattern>


        <minIndex>1</minIndex>


        <maxIndex>3</maxIndex>


        </rollingPolicy> -->


        <!-- 查看当前活动文件的大小，如果超过指定大小会告知RollingFileAppender 触发当前活动文件滚动


        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">


        <maxFileSize>5MB</maxFileSize>


        </triggeringPolicy> -->

         

        <encoder>


            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>


        </encoder>


    </appender>

     

    <!-- ConsoleAppender 控制台输出日志 -->


    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">


        <!-- 对日志进行格式化 -->


        <encoder>


            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger -%msg%n</pattern>


        </encoder>


    </appender>

     

    <!--<appender name="HTML" class="ch.qos.logback.core.FileAppender">-->


        <!--&lt;!&ndash; 过滤器，只记录WARN级别的日志 &ndash;&gt;-->


        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->


            <!--<level>info</level>-->


            <!--<onMatch>ACCEPT</onMatch>-->


            <!--<onMismatch>DENY</onMismatch>-->


        <!--</filter>-->

        <!-- -->

        <!--<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">-->


            <!--<layout class="ch.qos.logback.classic.html.HTMLLayout">-->


                <!--<pattern>%p%d%msg%M%F{32}%L</pattern>-->


            <!--</layout>-->


        <!--</encoder>-->


        <!--<file>D://logback/html/info-log.html</file>-->


    <!--</appender>-->

    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">


        <!-- 过滤器，只记录WARN级别的日志 -->


        <filter class="ch.qos.logback.classic.filter.LevelFilter">


            <level>info</level>


            <onMatch>ACCEPT</onMatch>


            <onMismatch>DENY</onMismatch>


        </filter>


        <!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责出发滚动 -->


        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">


            <!--日志输出位置 可相对、和绝对路径 -->


            <fileNamePattern>D://logback/${log_dir}/%d{yyyy-MM-dd}/info-log.log</fileNamePattern>


            <!-- 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件假设设置每个月滚动，且<maxHistory>是6，


            则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件是，那些为了归档而创建的目录也会被删除-->


            <maxHistory>${maxHistory}</maxHistory>


        </rollingPolicy>


        <encoder>


            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n</pattern>


        </encoder>


    </appender>

     
     

    <!-- 日志输出级别 -->


    <root level="info">

     

    <appender-ref ref="STDOUT" />


    <appender-ref ref="INFO" />

        <appender-ref ref="ERROR" />
</root>



</configuration>
